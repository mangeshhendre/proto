syntax = "proto3";

package services.assignment.v1;

option go_package = "golang.sgpdev.com/models/services_assignment_v1";

import "google/protobuf/wrappers.proto";


service Area {
    rpc Assign (AssignRequest) returns (AssignResponse);
    rpc ForceAssign (AssignRequest) returns (AssignResponse);
}

enum Reasons {
    success = 0; // Success or uninitialized.
    cap = 1; // Retry per normal
    no_vendors = 2; // Retry per normal
    stop = 3; // Stop retrying. <- new, but we do not know if needed.
}

message AssignRequest {
    google.protobuf.StringValue order_number = 1; // The externally available work ordernumber (WorkOrder.Order_Number)
    google.protobuf.StringValue network = 2;      /* Currently equivalent to department, some variations exist
                                TODO(Val):Identify variations.
                             */
    google.protobuf.StringValue client_code = 3;  // The string representation of the client code.
    google.protobuf.StringValue vendor_code = 4;  // Optional vendor to be preferred/selected for forced assignment.
    Address address = 5;     // Address object.
    // Pricing concers?
    // Bids.
    // Tasks.
}

message AssignResponse {
    bool success = 1; // True == we have a recommendation, false means no such luck.
    Reasons failure_reason = 2;
    google.protobuf.StringValue vendor = 3; // The vendor code that SPIGlass should record.
}

message Address {
    google.protobuf.StringValue address1 = 1;
    google.protobuf.StringValue address2 = 2;
    google.protobuf.StringValue city = 3;
    string zip_code = 4;
    google.protobuf.StringValue state = 5;
}