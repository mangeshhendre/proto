syntax = "proto3";

package sgt.result.transport.v1;

option go_package = "golang.sgpdev.com/models/sgt_result_transport_v1";

import "google/protobuf/timestamp.proto";

// Result is the top level entity that is transmitted by applications to communicate.
// It contains anything and everything that can represent a work order result.
message Result{
    Access access = 1;
    WorkOrder work_order = 2;
    repeated Answer answers = 3;
    repeated Damage damages = 4;
    repeated Bid bids = 5;
    repeated Task tasks = 6;
}

// Access is the model that is used to store
// the field result access header.   This will at some point contain
// A greater contingent of access oriented information, likely to include
// an access token.
message Access {
    string app_guid = 1;
    string app_version = 2;
    string platform = 3;
    string application = 4;
}

// WorkOrder is the model used to store the work order header
// from the field result transmission.   This should contain enough information
// to ground the rest of the submission in a specific work order.
message WorkOrder {
    int64 SPI_property_id = 1;  // SPI is capitalized to force the language conversion to be all caps.
    int64 order_number = 2;
    string script = 3; // The name of the script that originated the results.
    string script_version = 4; // The version of the script that originated the results.
    string third_party_guid = 5; // The best representation of a guid for cross platform purposes.
    google.protobuf.Timestamp submitted_date = 6;
    string timezone = 7; // A string representation of the offiset to GMT for the submitted results.
    string work_code = 8; // The package specifier that was worked on.
    string client_code = 9; // the string representation of the client.
    string loan_type = 10; // the string representation of the loan type.
    Resource submitting_resource = 11; // The resource transport model for the submitter of the results
}


// Answer is the model used to store the answers for a specific section.
message Answer {
    string name = 1;
    repeated string values = 2; // deprecated.
    repeated MediaGroup media_group = 3;
    repeated string asset = 4;
    repeated KeyValue key_values = 5;
    string question_type = 6;
    string question_text = 7;
    string data_type = 8;
    string termset_name = 9;
    string group_key = 10;
}

// Simple key/value structure.
message KeyValue {
    string key = 1;
    string value = 2;
}

// Resource reresents at least the company that is submitting the result.  It may contain an array
// of resources whom worked on the result.
message Resource {
    string code = 1;
    string device_guid = 2;
    double  latitude = 3;
    double  longitude = 4;
    repeated ChildResource resources = 5;
}

// ChildResource is a single child resource (worker) whom submitted results which get
// aggregated into the parent submission.
message ChildResource {
    string code = 1;
    string device_guid = 2;
    double  latitude = 3;
    double  longitude = 4;
}


message MediaGroup {
    string type = 1;
    string label = 2;
    repeated Media media =3;
    string tag = 4; // This appears in transport models coming from INSPI
}

message Media {
    repeated int64 id = 1;
    repeated string guid = 2;
    string prefix = 3; // This appears in transport models coming from INSPI
}


message InvoiceLineItem {
    string description = 1;
    double quantity = 2;
    double amount = 3;
    double discount = 4;
    string unit_of_measure = 5;
}

// These are the reported tasks in a given submission.
// Note that this is an identical structure to the Bid
// This is because bid tasks and regular tasks are the same thing.
message Task {
    string guid = 1;
    string source_id = 2;
    string category = 3;
    string type = 4;
    repeated Answer answers = 5;
    repeated MediaGroup media_group = 6;
    repeated string asset = 7;
    InvoiceLineItem invoice_line_item = 8;
}

// These are the reported bids in a given submission.
// Note that this is an identical structure to the Task.
message Bid {
    string guid = 1;
    string source_id = 2;
    string category = 3;
    string type = 4;
    repeated Answer answers = 5;
    repeated MediaGroup media_group = 6;
    repeated string asset = 7;
    InvoiceLineItem invoice_line_item = 8;
}

// Damage contains all the information to uniquely report a damage, along
// with a list of bids which may be related to that damage.
message Damage {
    string guid = 1;
    string source_id = 2;
    string category = 3;
    string type = 4;
    repeated Answer answers = 5;
    repeated MediaGroup media_group = 6;
    repeated string asset = 7;
    repeated Bid bids = 8;
}
